esphome:
  name: $hostname
  comment: ${device_description}
  platform: ESP32
  board: esp32dev

substitutions:
  devicename: "ahwood_birdhouse"
  hostname: "ah_birdhouse"
  #friendly_name: 
  device_description: Birdhouse with WIFI camera in an default ESP32-CAM module.
  
#   ALTER YOUR WIFI HERE OR USE AN ESPHOME SETTING FILE FOR IT. REPLEASE !secret wifi_ssid AND !secret wifi_password IF YOU WANT IT HARDCODED IN THIS FILE.
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  domain: .lan

  # Optional manual IP
  # manual_ip:
  #   static_ip: 192.168.1.200
  #   gateway: 192.168.1.1
  #   subnet: 255.255.255.0
  #   dns1: 192.168.1.1
  #   dns2: 8.8.8.8

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "${hostname} Hotspot"
    password: "1234567890"

# Enable logging
logger:
  level: debug

# Enable Home Assistant API. disable line 37,38 if you don't use Home-assitant.
api:
  reboot_timeout: 0s

web_server:
  port: 80
  include_internal: true
  

# or use native MQTT:

# Example configuration entry
# mqtt:
#   broker: #yourbrokerIP#
#   username: #broker user#
#   password: !secret #mqtt_password#

#enable air updates by browser.
ota:

#sync time
time:
  - platform: homeassistant
    id: homeassistant_time
    
# set illumination led OFF by start-up    
globals:
  - id: brightness_val
    type: int
    restore_value: true
    initial_value: '0'
    
    
    
# ESP32-CAM documented at: https://esphome.io/components/esp32_camera.html?highlight=cam
esp32_camera:
  name: $hostname
  icon: mdi:bird
  external_clock:
    pin: GPIO0
    frequency: 20MHz
  i2c_pins:
    sda: GPIO26
    scl: GPIO27
  data_pins: [GPIO5, GPIO18, GPIO19, GPIO21, GPIO36, GPIO39, GPIO34, GPIO35]
  vsync_pin: GPIO25
  href_pin: GPIO23
  pixel_clock_pin: GPIO22
  power_down_pin: GPIO32
  
  resolution: 1024x768 # you can use: [1600x1200 , 1280x1024 , 1024x768 , 800x600, 640x480 ] for best performance (FPS) use 1024 of lower resolution.
  
  jpeg_quality: 20 #The JPEG quality that the camera should encode images with. From 10 (best) to 63 (worst)
  aec2: true
  ae_level: 2
  brightness: 2 #The brightness to apply to the picture, default 0, updated to 2 for birdhouse
     
  
  contrast: 0
 # saturation: 1
#  wb_mode: home  #cloudy,office # use this for experiment with beter lightlevels
  
# Example configuration entry as documented at: https://esphome.io/components/esp32_camera_web_server.html?highlight=camera%20server
esp32_camera_web_server:
  - port: 8080
    mode: stream
  - port: 8081
    mode: snapshot
    
# Flashlight # you can control this flashlight within Homeassistant or mqtt to shine on the birds. use it with an timer!
output:
  - platform: ledc
    pin: GPIO4
    id: gpio_4
    channel: 2

## GPIO_4 is the flash light pin
light:
  - platform: monochromatic
    output: gpio_4
    name: $hostname light
    restore_mode: RESTORE_AND_OFF
    icon: mdi:flash

#Temperature sensors, optional not default on the board, special request !
# dallas:
#   - pin: GPIO13
#     update_interval: 10s


sensor:
  - platform: uptime
    name: $hostname Uptime
    disabled_by_default: true
    entity_category: diagnostic  
    
  - platform: wifi_signal
    name: $hostname WiFi Signal
    update_interval: 240s
    disabled_by_default: true
    entity_category: diagnostic  

#   - platform: dallas # https://esphome.io/components/sensor/dallas.html?highlight=dallas
#     address: 0x7001186db7d0ff28 # <<-- alter your sensor code here.
#     name: "${hostname} temperature"    
#     device_class: "temperature"
#     state_class: "measurement"
#     unit_of_measurement: "Â°C"
#     filters:
#       - sliding_window_moving_average:
#           window_size: 10
#           send_every: 10    
#       - lambda:  return x * 0.7;
switch:
  - platform: restart
    name: "${hostname} restart"   
    entity_category: config